<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.dao.MemberDAOImpl">

    <select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
        SELECT auth
        FROM authority
        WHERE 1=1
        AND username = #{username}
    </select>

    <insert id="insertMember" parameterType="com.project.dto.MemberDTO">
        INSERT INTO member(
            id,
            password,
            name,
            username,
            nickname,
            pnum,
            address,
            isAccountNonExpired,
            isAccountNonLocked,
            isCredentialsNonExpired,
            isEnabled
        )
        VALUES (
            #{id},
            #{password},
            #{name},
            #{username},
            #{nickname},
            #{pnum},
            #{address},
            #{isAccountNonExpired},
            #{isAccountNonLocked},
            #{isCredentialsNonExpired},
            #{isEnabled}
        )
    </insert>

    <select id="loginMember" parameterType="com.project.dto.MemberDTO" resultType="com.project.dto.MemberDTO">
        SELECT id AS id,
               password AS password,
               idx AS idx
        FROM member
        WHERE username = #{username}
    </select>

    <select id="readMember" parameterType="String" resultType="com.project.dto.MemberDTO">
        SELECT idx AS idx,
               id AS id,
               password AS password,
               name AS name,
               nickname AS nickname,
               pnum AS pnum,
               address AS address,
               isAccountNonExpired AS isAccountNonExpired,
               isAccountNonLocked AS isAccountNonLocked,
               isCredentialsNonExpired AS isCredentialsNonExpired,
               isEnabled AS isEnabled
        FROM member
        WHERE 1=1
        AND username = #{username}
    </select>

    <select id="selectMember" parameterType="com.project.dto.MemberDTO" resultType="com.project.dto.MemberDTO">
        SELECT idx AS idx,
               id AS id,
               password AS password,
               name AS name,
               nickname AS nickname,
               pnum AS pnum,
               address AS address
        FROM   member
        WHERE  idx = #{idx}
    </select>

    <update id="updateMember" parameterType="com.project.dto.MemberDTO">
        UPDATE member
        SET
               password = #{password},
               name = #{name},
               nickname = #{nickname},
               pnum = #{pnum},
               address = #{address}
        WHERE  idx = #{idx}
    </update>

    <delete id="deleteMember" parameterType="com.project.dto.MemberDTO">
        DELETE FROM member
        WHERE   idx = #{idx}
    </delete>

    <select id="checkMember" parameterType="com.project.dto.MemberDTO" resultType="int">
        SELECT COUNT(*)
        FROM   member
        WHERE  id = #{id}
    </select>

    <insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
        INSERT INTO authority (
            username,
            auth
        ) VALUES
        <foreach item="authority" index = "index" collection="authorities" separator=",">
            (#{username}, #{authority.role})
        </foreach>
        ON DUPLICATE KEY
        UPDATE
        username = #{username}
    </insert>

</mapper>