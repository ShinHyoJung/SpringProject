<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.dao.MemberDAOImpl">

    <insert id="insertMember" parameterType="com.project.vo.Member">
        INSERT INTO member(
            id,
            password,
            name,
            username,
            nickname,
            pnum,
            email,
            isAccountNonExpired,
            isAccountNonLocked,
            isCredentialsNonExpired,
            isEnabled
        )
        VALUES (
            #{id},
            #{password},
            #{name},
            #{username},
            #{nickname},
            #{pnum},
            #{email},
            #{isAccountNonExpired},
            #{isAccountNonLocked},
            #{isCredentialsNonExpired},
            #{isEnabled}
        )
    </insert>

    <select id="loginMember" parameterType="com.project.vo.Member" resultType="com.project.vo.Member">
        SELECT idx AS idx,
               id AS id,
               password AS password,
               name AS name,
               nickname AS nickname,
               username AS username,
               authkey AS authkey,
               isAccountNonExpired AS isAccountNonExpired,
               isAccountNonLocked AS isAccountNonLocked,
               isCredentialsNonExpired AS isCredentialsNonExpired,
               isEnabled AS isEnabled
        FROM   member
        WHERE  username = #{username}
    </select>

    <select id="selectMember" parameterType="com.project.vo.Member" resultType="com.project.vo.Member">
        SELECT idx AS idx,
               id AS id,
               password AS password,
               name AS name,
               nickname AS nickname,
               pnum AS pnum,
               email AS email
        FROM   member
        WHERE  username=#{username}
    </select>

    <update id="updateMember" parameterType="com.project.vo.Member">
        UPDATE member
        SET
               password = #{password},
               name = #{name},
               nickname = #{nickname},
               pnum = #{pnum},
               email = #{email}
        WHERE  idx = #{idx}
    </update>

    <update id="updateEmail" parameterType="com.project.vo.Member">
        UPDATE  member
        SET
                email = #{email}
        WHERE   idx = #{idx}
    </update>
    <delete id="deleteMember" parameterType="com.project.vo.Member">
        DELETE FROM member
        WHERE   username = #{username}
    </delete>

    <select id="checkId" parameterType="com.project.vo.Member" resultType="int">
        SELECT COUNT(*)
        FROM   member
        WHERE  id = #{id}
    </select>

    <select id="checkEmail" parameterType="com.project.vo.Member" resultType="int">
        SELECT COUNT(*)
        FROM   member
        WHERE  email = #{email}
    </select>

    <select id="checkNickname" parameterType="com.project.vo.Member" resultType="int">
        SELECT COUNT(*)
        FROM   member
        WHERE  nickname = #{nickname}
    </select>

    <insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
        INSERT INTO authority (
            username,
            auth
        ) VALUES
        <foreach item="authority" index = "index" collection="authorities" separator=",">
            (#{username}, #{authority.role})
        </foreach>
        ON DUPLICATE KEY
        UPDATE
        username = #{username}
    </insert>

    <select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
        SELECT auth
        FROM authority
        WHERE username = #{username}
    </select>

    <delete id="deleteAuthorities" parameterType="String">
        DELETE FROM authority
        WHERE  username = #{username}
    </delete>

    <update id="updateAuthorities" parameterType="String">
        UPDATE  authority
        SET auth = 'ROLE_USER'
        WHERE  username = #{username}
    </update>

    <select id="findId" parameterType="com.project.vo.Member" resultType="com.project.vo.Member">
        SELECT username as username
        FROM  member
        WHERE name = #{name}
        AND pnum = #{pnum}
    </select>

    <select id="findPwd" parameterType="com.project.vo.Member" resultType="int">
        SELECT COUNT(*)
        FROM member
        WHERE id = #{id}
        AND   name = #{name}
    </select>

    <update id="updatePwd" parameterType="com.project.vo.Member">
        UPDATE member
        SET
               password = #{password}
        WHERE  id = #{id}
        AND    name = #{name}
    </update>

    <insert id="insertAuthKey" parameterType="com.project.vo.EmailAuth">
        INSERT INTO emailauth (
            email,
            authkey
        ) VALUES (
            #{email},
            #{authkey}
        )
    </insert>

    <update id="updateAuthKey" parameterType="com.project.vo.EmailAuth">
        UPDATE member
        SET  authkey =1
        WHERE email = #{email}
    </update>

    <delete id="deleteEmail" parameterType="String">
        DELETE FROM emailauth
        WHERE  email = #{email}
    </delete>

    <select id="checkUser" parameterType="int" resultType="String">
        SELECT name as name
        FROM member
        WHERE idx = #{idx}
</select>
</mapper>